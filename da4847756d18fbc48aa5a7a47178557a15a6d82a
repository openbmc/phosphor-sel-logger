{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e3778b2_e8c3b6cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2024-02-16T17:22:17Z",
      "side": 1,
      "message": "Thanks for the update.  It has resolved everything except the rollover case, which may be the most complicated.\n\nAre you sure you need to adjust the record IDs?  We can confirm with the IPMI experts, but my understanding is that record IDs don\u0027t need to be contiguous, and it seems much simpler to just leave a gap at the deleted ID.",
      "revId": "da4847756d18fbc48aa5a7a47178557a15a6d82a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16b25710_c69dd43c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001538
      },
      "writtenOn": "2024-02-22T16:24:55Z",
      "side": 1,
      "message": "While the IPMI spec doen\u0027t specify that the Record IDs must be contguous, I am currently adjusting the record IDs because when the SEL entries are displayed using `ipmitool sel list`, they are assumed to be sequentially contiguous as seen here:\nhttps://github.com/openbmc/phosphor-host-ipmid/blob/f027bf0334b91de5c829d21082dd42b75b45a405/dbus-sdr/storagecommands.cpp#L826\n\nIf the record IDs are not contiguous, then the entries after the gap are not displayed. This is also an issue with the current SEL Record ID rollover implementation since there would be a gap from 0xFFFE to 0x0001 so it may stop printing the SEL once the 0xFFFE entry is reached.",
      "parentUuid": "6e3778b2_e8c3b6cc",
      "revId": "da4847756d18fbc48aa5a7a47178557a15a6d82a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}